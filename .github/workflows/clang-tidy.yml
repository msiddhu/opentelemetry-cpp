name: clang-tidy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  clang-tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y --no-install-recommends --no-install-suggests \
            build-essential \
            clang \
            clang-tidy \
            cmake \
            ninja-build \
            libssl-dev \
            libcurl4-openssl-dev \
            libprotobuf-dev \
            protobuf-compiler \
            libgmock-dev \
            libgtest-dev \
            libbenchmark-dev \
            wget \
            unzip

#      - name: Install gRPC and Abseil from Source
#        run: |
#          # Install Abseil
#          wget https://github.com/abseil/abseil-cpp/archive/refs/heads/master.zip -O abseil.zip
#          unzip abseil.zip
#          mkdir -p abseil-build && cd abseil-build
#          cmake ../abseil-cpp-master -DCMAKE_POSITION_INDEPENDENT_CODE=ON
#          make -j$(nproc)
#          sudo make install
#
#          # Install gRPC
#          cd ..
#          git clone --recurse-submodules -b v1.40.0 https://github.com/grpc/grpc
#          cd grpc
#          mkdir -p cmake/build && cd cmake/build
#          cmake ../.. \
#            -DCMAKE_BUILD_TYPE=Release \
#            -DgRPC_INSTALL=ON \
#            -DgRPC_BUILD_TESTS=OFF \
#            -DgRPC_ABSL_PROVIDER=package \
#            -DgRPC_CARES_PROVIDER=package \
#            -DgRPC_PROTOBUF_PROVIDER=package \
#            -DgRPC_RE2_PROVIDER=package \
#            -DgRPC_SSL_PROVIDER=package \
#            -DgRPC_ZLIB_PROVIDER=package
#          make -j$(nproc)
#          sudo make install

      - name: Download run-clang-tidy.py
        run: wget https://raw.githubusercontent.com/llvm/llvm-project/main/clang-tools-extra/clang-tidy/tool/run-clang-tidy.py

      - name: Prepare CMake
        run: |
          mkdir build && cd build
          echo "Running cmake..."
          CC="clang" CXX="clang++" cmake .. \
            -DWITH_OTLP_HTTP=ON \
            -DWITH_OTLP_FILE=ON \
            -DWITH_OTLP_GRPC=OFF \
            -DWITH_PROMETHEUS=ON \
            -DWITH_ZIPKIN=ON \
            -DWITH_ELASTICSEARCH=ON \
            -DWITH_OTLP_HTTP_COMPRESSION=ON \
            -DWITH_EXAMPLES=ON \
            -DWITH_EXAMPLES_HTTP=ON \ 
            -DBUILD_W3CTRACECONTEXT_TEST=ON \
            -DWITH_METRICS_EXEMPLAR_PREVIEW=ON \
            -DWITH_ASYNC_EXPORT_PREVIEW=ON \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
#            -DWITH_OTLP_GRPC_SSL_MTLS_PREVIEW=ON \

      - name: Remove Third_party Modules from Code Scan
        run: rm -rf third_party

      - name: Run Clang-Tidy
        run: |
          cd build
          python3 ../run-clang-tidy.py -p .

      - uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: Logs (clang-tidy)
          path: ./build/clang-tidy-result.log

      - name: Count Warnings
        run: |
          cd build
          COUNT=$(grep -c "warning:" clang-tidy-result.log)
          echo "clang-tidy reported ${COUNT} warning(s)"
